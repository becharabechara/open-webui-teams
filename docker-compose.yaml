services:
  ollama:
    volumes:
      - ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: ollama/ollama:${OLLAMA_DOCKER_TAG-latest}

  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: lagoon-open-webui:v0.5.5
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
      - jupyter-data:/jupyter-files
    depends_on:
      - ollama
      - qdrant
      - docling
      - playwright
      - jupyter
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    env_file:
      - .env
    extra_hosts:
      - host.docker.internal:host-gateway
      - api-dev.tikehaucapital.com:192.168.10.53
    dns:
      - 192.168.10.10
      - 8.8.8.8
    command: >
      bash -c "chown -R 0:0 /app/backend/data && \
               groupadd -g 1000 sharedgroup || true && \
               chgrp -R sharedgroup /jupyter-files && \
               chmod -R g+w /jupyter-files && \
               bash /app/backend/start.sh"
    restart: unless-stopped

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile-jupyter
    image: custom-jupyter:python-3.11
    container_name: jupyter
    volumes:
      - jupyter-data:/jupyter-files
    ports:
      - 8888:8888
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${CODE_EXECUTION_JUPYTER_AUTH_TOKEN}
      - NB_UID=1000
      - NB_GID=100
      - CHOWN_HOME=yes
      - CHOWN_HOME_OPTS=-R
      - CHOWN_EXTRA=/jupyter-files
      - CHOWN_EXTRA_OPTS=-R
      - NB_DIR=/jupyter-files
      - JUPYTER_LOG_LEVEL=DEBUG
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2g
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8888/jupyter/api?token=${CODE_EXECUTION_JUPYTER_AUTH_TOKEN} > /dev/null"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  tika:
    image: apache/tika:${TIKA_VERSION-2.9.1.0}
    container_name: tika
    restart: unless-stopped
    ports:
      - ${TIKA_PORT-9998}:9998
    healthcheck:
      test: ["CMD", "curl", "-f", "${TIKA_SERVER_ENDPOINT}/tika"]
      interval: ${TIKA_HEALTHCHECK_INTERVAL-60s}
      timeout: ${TIKA_HEALTHCHECK_TIMEOUT-10s}
      retries: ${TIKA_HEALTHCHECK_RETRIES-3}

  docling:
    build:
      context: .
      dockerfile: Dockerfile-docling
    image: custom-docling:latest
    container_name: docling
    restart: unless-stopped
    ports:
      - ${DOCLING_PORT-5001}:5001
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "${DOCLING_SERVER_ENDPOINT}/health"]
      interval: ${DOCLING_HEALTHCHECK_INTERVAL-60s}
      timeout: ${DOCLING_HEALTHCHECK_TIMEOUT-10s}
      retries: ${DOCLING_HEALTHCHECK_RETRIES-3}
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4g

  playwright:
    image: mcr.microsoft.com/playwright:v1.49.1-noble
    container_name: playwright
    command: npx -y playwright@1.49.1 run-server --port 3000 --host 0.0.0.0
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 --config /etc/cloudflared/cloudflared-config.yaml run openwebui-tunnel
    volumes:
      - ./cloudflared:/etc/cloudflared
    depends_on:
      - open-webui

volumes:
  ollama: {}
  open-webui: {}
  qdrant_data: {}
  jupyter-data: {}